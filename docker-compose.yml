version: '3.9'

services:
  eureka-server:
    image: openjdk:17
    container_name: eureka-server
    volumes:
      - ./eureka-server:/app
    working_dir: /app
    command: ["./gradlew", "bootRun", "-Dspring.profiles.active=dev"]
    ports:
      - "8761:8761"
      - "5001:5005"     # 디버그 포트
    environment:
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"

  api-gateway:
    image: openjdk:17
    container_name: api-gateway
    volumes:
      - ./api-gateway:/app
    working_dir: /app
    command: ["./gradlew", "bootRun", "-Dspring.profiles.active=dev"]
    ports:
      - "8080:8080"
      - "5002:5005"     # 디버그 포트
    environment:
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"

  user-service:
    image: openjdk:17
    container_name: user-service
    volumes:
      - ./user-service:/app
    working_dir: /app
    command: ["./gradlew", "bootRun", "-Dspring.profiles.active=dev"]
    ports:
      - "8081:8081"
      - "5003:5005"     # 디버그 포트
    environment:
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
    depends_on:
      - eureka-server

  task-service:
    image: openjdk:17
    container_name: task-service
    volumes:
      - ./task-service:/app
    working_dir: /app
    command: ["./gradlew", "bootRun", "-Dspring.profiles.active=dev"]
    ports:
      - "8082:8082"
      - "5004:5005"     # 디버그 포트
    environment:
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
    depends_on:
      - eureka-server

  tag-service:
    image: openjdk:17
    container_name: tag-service
    volumes:
      - ./tag-service:/app
    working_dir: /app
    command: ["./gradlew", "bootRun", "-Dspring.profiles.active=dev"]
    ports:
      - "8083:8083"
      - "5005:5005"     # 디버그 포트
    environment:
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
    depends_on:
      - eureka-server

#  mysql:
#    image: mysql:latest
#    container_name: todo-mysql
#    environment:
#      MYSQL_ROOT_PASSWORD: password
#      MYSQL_DATABASE: user_db
#      MYSQL_DATABASE_2: task_db
#      MYSQL_DATABASE_3: tag_db
#      TZ: Asia/Seoul
#    ports:
#      - "3306:3306"
#    volumes:
#      - mysql-data:/var/lib/mysql

# volumes:
#  mysql-data:
